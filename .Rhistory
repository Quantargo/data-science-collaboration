titlefont = f1
)
x <- 1:10
y.pos <- 1:10 * (1.02)^(1:10)
plot_ly(x = x, y = x, type = 'scatter', mode = 'lines',
name = 'Linear Productivity') %>%
add_lines(x = x, y = y.pos, name = 'Positive Network Effect',
fill = 'tonexty', line = list(color = "green")) %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
y.neg <- 1:10 * (1.02)^-(1:10)
plot_ly(x = x, y = x, type = 'scatter', mode = 'lines',
name = 'Linear Productivity') %>%
add_lines(x = x, y = y.neg, name = 'Positive Network Effect',
fill = 'tonexty', , line = list(color = "red")) %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
getwd()
x <- do.call(rbind, x)
source('~/CloudStation/Programming/quantargo/conference_data-science-collaboration/data/pkgs.R')
load("data/pkgs.rda")
pkgs
head(pkgs)
pkgs
plot_ly(pkgs, x = ~Month, y = ~published, type = 'scatter', mode = 'lines',
name = 'Linear Productivity')
plot_ly(pkgs, x = ~Date, y = ~published, type = 'scatter', mode = 'lines',
name = 'Linear Productivity')
xaxt <- list(
title = ""
)
yaxt <- list(
title = "Number of Packages Published",
)
xaxt <- list(
title = ""
)
yaxt <- list(
title = "Number of Packages Published"
)
plot_ly(pkgs, x = ~Date, y = ~published, type = 'scatter', mode = 'lines',
name = 'Linear Productivity') %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
load("data/pkgs.rda")
library(ggplot2)
title <- sprintf("CRAN Packages Published as of %s", format(max(pkgs$Date), "%m/%Y"))
xaxt <- list(
title = ""
)
yaxt <- list(
title = "Number of Packages Published"
)
plot_ly(pkgs, x = ~Date, y = ~published, type = 'scatter', mode = 'lines',
name = 'Linear Productivity') %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
load("data/pkgs.rda")
library(ggplot2)
title <- sprintf("CRAN Packages Published as of %s", format(max(pkgs$Date), "%m/%Y"))
xaxt <- list(
title = "",
titlefont = f1
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1
)
plot_ly(pkgs, x = ~Date, y = ~published, type = 'scatter', mode = 'lines',
name = 'Linear Productivity') %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
load("data/pkgs.rda")
library(ggplot2)
title <- sprintf("CRAN Packages Published as of %s", format(max(pkgs$Date), "%m/%Y"))
xaxt <- list(
title = "",
tickfont = f1
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1
)
plot_ly(pkgs, x = ~Date, y = ~published, type = 'scatter', mode = 'lines',
name = 'Linear Productivity') %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
load("data/pkgs.rda")
library(ggplot2)
title <- sprintf("CRAN Packages Published as of %s", format(max(pkgs$Date), "%m/%Y"))
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1
)
plot_ly(pkgs, x = ~Date, y = ~published, type = 'scatter', mode = 'lines',
name = 'Linear Productivity') %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
load("data/pkgs.rda")
library(ggplot2)
title <- sprintf("CRAN Packages Published as of %s", format(max(pkgs$Date), "%m/%Y"))
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1
)
plot_ly(pkgs, x = ~Date, y = ~published, type = 'scatter', mode = 'lines',
name = 'Linear Productivity', fill = 'tonexty') %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
load("data/pkgs.rda")
library(ggplot2)
title <- sprintf("CRAN Packages Published as of %s", format(max(pkgs$Date), "%m/%Y"))
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white"
)
plot_ly(pkgs, x = ~Date, y = ~published, type = 'scatter', mode = 'lines',
name = 'Linear Productivity', fill = 'tonexty') %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
authors <- pdb$Author
authors.split <- authors %>% removeArtifacts %>% removeBraces %>% splitAndComma %>% wstrim
pdb$NumAuthors <- sapply(authors.split, length)
plot_ly(pdb, x = ~NumAuthors, type = "histogram")
authors <- pdb$Author
authors.split <- authors %>% removeArtifacts %>% removeBraces %>% splitAndComma %>% wstrim
pdb$NumAuthors <- sapply(authors.split, length)
plot_ly(pdb, x = ~NumAuthors, type = "histogram")
authors <- pdb$Author
authors.split <- authors %>% removeArtifacts %>% removeBraces %>% splitAndComma %>% wstrim
pdb$NumAuthors <- sapply(authors.split, length)
plot_ly(data = pdb, x = ~NumAuthors, type = "histogram")
plot_ly(x = pdb$NumAuthors, type = "histogram")
authors <- pdb$Author
authors.split <- authors %>% removeArtifacts %>% removeBraces %>% splitAndComma %>% wstrim
pdb$NumAuthors <- sapply(authors.split, length)
plot_ly(x = pdb$NumAuthors, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
#ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10() + theme_dark()
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white"
type="log"
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white",
type="log"
)
plot_ly(x = pdb$NumAuthors, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
ggplot(reversedep, aes(x = dep)) + geom_histogram(bins = 18) + scale_x_log10() + theme_dark()
imports <- pdb$Imports %>% removeBraces %>% splitAndComma %>% wstrim
depends <- pdb$Depends %>% removeBraces %>% splitAndComma %>% wstrim
impdep <- lapply(1:length(imports), function(x) {
out <- c(imports[[x]], depends[[x]])
out <- out[!is.na(out)]
out <- out[out != "R"]
out
})
names(impdep) <- pdb$Package
impdep.df <- melt(impdep)
impdep.df$value.idx <- match(impdep.df$value, names(impdep))
impdep.df$L1.idx <- match(impdep.df$L1, names(impdep))
impdep.df <- na.omit(impdep.df)
toppkg <- read_csv("data/2018-09-03.csv", col_types = cols()) %>%
group_by(package) %>%
summarise(ndownloads = n())
toppkglist <- toppkg %>% arrange(desc(ndownloads)) %>%
select(package) %>% unlist(use.names=FALSE)
nodes.df <- impdep.df %>% filter(L1 %in% head(toppkglist, 300))
reversedep <- impdep.df %>% group_by(value) %>% summarise(dep = n())
nclasses = 9
reversedep$inverval <- cut(log(reversedep$dep), breaks = nclasses)
nodes.df.join <- nodes.df %>% inner_join(reversedep, by = c("L1" = "value"))
hcols <- rev(RColorBrewer::brewer.pal(nclasses, "YlGnBu"))
nodes.df.join$cols <- hcols[as.numeric(nodes.df.join$inverval)]
nodes <- data.frame(id = nodes.df.join$L1.idx,
label = nodes.df.join$L1,
color = nodes.df.join$cols
#color.highlight.background = c("white"),
#font.color =c ("white")
)
# add labels on nodes
#group = c("GrA", "GrB"),                                     # add groups on nodes
#value = 1,                                                # size adding value
#shape = c("circle"),                   # control shape of nodes
#title = paste0("<p><b>", nodes.df$L1,"</b></p>"),         # tooltip (html or character)
#shadow = FALSE)
edges <- data.frame(from = nodes.df.join$L1.idx, to = nodes.df.join$value.idx)
visNetwork::visNetwork(unique(nodes), edges) %>%
visInteraction(dragNodes = TRUE, dragView = TRUE, zoomView = TRUE) %>%
visNodes(font = list(color = "white"))
#reversedep %>% arrange(desc(dep)) %>% top_n(10)
ggplot(reversedep, aes(x = dep)) + geom_histogram(bins = 18) + scale_x_log10() + theme_dark()
plot_ly(x = reversedep, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
plot_ly(x = reversedep, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
plot_ly(x = reversedep, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
reversedep
#reversedep %>% arrange(desc(dep)) %>% top_n(10)
plot_ly(reversedep, x = ~dep, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
authors <- pdb$Author
authors.split <- authors %>% removeArtifacts %>% removeBraces %>% splitAndComma %>% wstrim
pdb$NumAuthors <- sapply(authors.split, length)
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white",
type="log"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white"
)
plot_ly(x = pdb$NumAuthors, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
#ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10() + theme_dark()
authors <- pdb$Author
authors.split <- authors %>% removeArtifacts %>% removeBraces %>% splitAndComma %>% wstrim
pdb$NumAuthors <- sapply(authors.split, length)
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white"
)
plot_ly(x = pdb$NumAuthors, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
#ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10() + theme_dark()
ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10() + theme_dark()
p <- ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10()
ggplotly(p)
p <- ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10()
ggplotly(p) %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
authors <- pdb$Author
authors.split <- authors %>% removeArtifacts %>% removeBraces %>% splitAndComma %>% wstrim
pdb$NumAuthors <- sapply(authors.split, length)
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white"
)
#plot_ly(x = pdb$NumAuthors, type = "histogram")
p <- ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10()
ggplotly(p) %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white"
)
plot_ly(x = pdb$NumAuthors, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white"
)
plot_ly(x = pdb$NumAuthors, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
authors <- pdb$Author
authors.split <- authors %>% removeArtifacts %>% removeBraces %>% splitAndComma %>% wstrim
pdb$NumAuthors <- sapply(authors.split, length)
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white",
type="log"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white"
)
plot_ly(x = pdb$NumAuthors, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
p <- ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10()
ggplotly(p)
p <- ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10() + theme_minimal()
ggplotly(p)
#reversedep %>% arrange(desc(dep)) %>% top_n(10)
p <- ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10() + theme_minimal()
ggplotly(p)
#plot_ly(reversedep, x = ~dep, type = "histogram") %>%
#  layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
#         legend = list(x = 0.1, y = 0.9, font = flegend))
p <- ggplot(aes(x = reversedep)) + geom_histogram(bins = 10) + scale_x_log10() + theme_minimal()
reversedep$value
reversedep$dep
p <- ggplot(reversedep, aes(x = dep)) + geom_histogram(bins = 10) + scale_x_log10() + theme_minimal()
ggplotly(p)
p <- ggplot(reversedep, aes(x = dep)) + geom_histogram(bins = 10) + scale_x_log10() + theme_minimal()
ggplotly(p)
authors <- pdb$Author
authors.split <- authors %>% removeArtifacts %>% removeBraces %>% splitAndComma %>% wstrim
pdb$NumAuthors <- sapply(authors.split, length)
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white",
type="log"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white"
)
#plot_ly(x = pdb$NumAuthors, type = "histogram") %>%
# layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
#         legend = list(x = 0.1, y = 0.9, font = flegend))
p <- ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10() + theme_minimal(rect = element_rect(fill = "transparent")
ggplotly(p)
authors <- pdb$Author
authors.split <- authors %>% removeArtifacts %>% removeBraces %>% splitAndComma %>% wstrim
pdb$NumAuthors <- sapply(authors.split, length)
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white",
type="log"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white"
)
#plot_ly(x = pdb$NumAuthors, type = "histogram") %>%
# layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
#         legend = list(x = 0.1, y = 0.9, font = flegend))
p <- ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10() + theme_minimal(plot.background = element_rect(fill = "transparent", col = NA))
ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10() +
theme(
rect = element_rect(fill = "transparent") # all rectangles
)
ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10() + theme_minimal() +
theme(
rect = element_rect(fill = "transparent") # all rectangles
)
ggplotly(p)
plot_ly(x = pdb$NumAuthors, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
authors <- pdb$Author
authors.split <- authors %>% removeArtifacts %>% removeBraces %>% splitAndComma %>% wstrim
pdb$NumAuthors <- sapply(authors.split, length)
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white",
type="log"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white"
)
plot_ly(x = pdb$NumAuthors, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
#p <- ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10() + theme_minimal() +
#  theme(
#        rect = element_rect(fill = "transparent") # all rectangles
#      )
#ggplotly(p)
rect = element_rect(fill = "transparent") # all rectangles
hist(pdb$NumAuthors)
summary(pdb$NumAuthors))
summary(pdb$NumAuthors)
summary(as.factor(pdb$NumAuthors))
authors <- pdb$Author
authors.split <- authors %>% removeArtifacts %>% removeBraces %>% splitAndComma %>% wstrim
pdb$NumAuthors <- sapply(authors.split, length)
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white",
type="log"
)
plot_ly(x = pdb$NumAuthors, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
#p <- ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10() + theme_minimal() +
#  theme(
#        rect = element_rect(fill = "transparent") # all rectangles
#      )
#ggplotly(p)
authors <- pdb$Author
authors.split <- authors %>% removeArtifacts %>% removeBraces %>% splitAndComma %>% wstrim
pdb$NumAuthors <- sapply(authors.split, length)
xaxt <- list(
title = "",
titlefont = f1,
tickfont = f1,
color="white",
type="log"
)
yaxt <- list(
title = "Number of Packages Published",
titlefont = f1,
tickfont = f1,
color="white"
)
plot_ly(x = pdb$NumAuthors, type = "histogram") %>%
layout(xaxis = xaxt, yaxis = yaxt, paper_bgcolor = 'rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
legend = list(x = 0.1, y = 0.9, font = flegend))
#p <- ggplot(pdb, aes(x = NumAuthors)) + geom_histogram(bins = 10) + scale_x_log10() + theme_minimal() +
f1 <- list(
family = "Arial, sans-serif",
size = 18,
color = "white"
)
f1
getwd()
